# -*- coding: utf-8 -*-
# vim: set syntax=yaml ts=2 sw=2 sts=2 et :

##
# GUI Virtual Machine Common State Template
# ==============================
##

{% macro gui_common(vmname) -%}
# Setup Qubes RPC policy
{{ vmname }}-rpc:
  file.managed:
    - name: /etc/qubes/policy.d/50-gui-{{ vmname }}.policy
    - contents: |
        policy.EvalGUI  +qubes.ClipboardPaste   {{ vmname }}             dom0                             allow
        qubes.GetImageRGBA                  *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow
        qubes.GetAppmenus                   *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow
        qubes.ClipboardCopy                 +   {{ vmname }}             @tag:guivm-{{ vmname }}          allow
        qubes.ClipboardPaste                +   {{ vmname }}             @tag:guivm-{{ vmname }}          allow
        # TODO: limit to templates related to @tag:guivm-{{ vmname }} only
        qubes.GetAppmenus                   *   {{ vmname }}             @type:TemplateVM                 allow
        qubes.SetMonitorLayout              *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow
        qubes.StartApp                      *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow
        qubes.StartApp                      *   {{ vmname }}             @dispvm:@tag:guivm-{{ vmname }}  allow
        qubes.SyncAppMenus                  *   @tag:guivm-{{ vmname }}  dom0                        allow   target={{ vmname }}
        qubes.WindowIconUpdater             *   @tag:guivm-{{ vmname }}  dom0                        allow   target={{ vmname }}
        qubes.Notifications                 *   @tag:guivm-{{ vmname }}  @default                    allow   target={{ vmname }} autostart=no
        qubes.WaitForSession                *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow
{%- if 'psu' in salt['pillar.get']('qvm:' + vmname + ':dummy-modules', []) %}
        qubes.PowerSupply                   *   {{ vmname }}             @default                         allow target=dom0
{%- endif %}
{%- if 'backlight' in salt['pillar.get']('qvm:' + vmname + ':dummy-modules', []) %}
        qubes.SetBrightness                 *   {{ vmname }}             @default                         allow target=dom0
{%- endif %}

        # Parts of Admin API necessary for GUI-related tools to work
        admin.vm.List                       *   {{ vmname }}             dom0                             allow
        admin.vm.List                       *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow target=dom0
        admin.Events                        *   {{ vmname }}             dom0                             allow
        admin.Events                        *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow target=dom0
        admin.label.Get                     *   {{ vmname }}             dom0                             allow
        admin.label.Index                   *   {{ vmname }}             dom0                             allow
        admin.vm.feature.Set +keyboard-layout   {{ vmname }}             {{ vmname }}                     allow target=dom0
        admin.vm.property.Get               *   {{ vmname }}             dom0                             allow
        admin.vm.property.Get       +template   {{ vmname }}             @tag:guivm-{{ vmname }}          allow target=dom0
        # TODO: limit to templates related to @tag:guivm-{{ vmname }} only
        admin.vm.property.Get       +template   {{ vmname }}             @type:TemplateVM                 allow target=dom0
        admin.vm.volume.List                *   {{ vmname }}             dom0                             allow
        admin.vm.device.pci.Available       *   {{ vmname }}             dom0                             allow
        admin.vm.device.mic.Available       *   {{ vmname }}             dom0                             allow
        admin.vm.feature.Get        +internal   {{ vmname }}             dom0                             allow
        admin.vm.feature.Get       +servicevm   {{ vmname }}             dom0                             allow
        admin.vm.feature.List               *   {{ vmname }}             @tag:guivm-{{ vmname }}          allow target=dom0
        # TODO: find a way to avoid this one (ram, cpu usage)
        admin.vm.CurrentState               *   {{ vmname }}             dom0                             allow

# GuiVM (AdminVM) with local 'rwx' permissions
{{ vmname }}-admin-local-rwx:
  file.append:
    - name: /etc/qubes/policy.d/include/admin-local-rwx
    - text: |
        {{ vmname }} @tag:guivm-{{ vmname }} allow target=dom0
        {{ vmname }} {{ vmname }} allow target=dom0

# GuiVM (AdminVM) with global 'ro' permissions
{% if salt['pillar.get']('qvm:' + vmname + ':admin-global-permissions') == 'ro' %}
{{ vmname }}-admin-global-ro:
  file.append:
    - name: /etc/qubes/policy.d/include/admin-global-ro
    - text: |
        {{ vmname }} @adminvm allow target=dom0
        {{ vmname }} @tag:guivm-{{ vmname }} allow target=dom0
        {{ vmname }} {{ vmname }} allow target=dom0
{% endif %}

{% if salt['pillar.get']('qvm:' + vmname + ':admin-global-permissions') == 'rwx' %}
# GuiVM (AdminVM) with global 'rwx' permissions
{{ vmname }}-admin-global-rwx:
  file.append:
    - name: /etc/qubes/policy.d/include/admin-global-rwx
    - text: |
        {{ vmname }} @adminvm allow target=dom0
        {{ vmname }} @tag:guivm-{{ vmname }} allow target=dom0
        {{ vmname }} {{ vmname }} allow target=dom0
{% endif %}
{%- endmacro %}

